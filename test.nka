import test_lib.nka

fn help {
    
    // welp, this is a comment
    ++;

    clear;

    if is_wall {
        fill;
        set_value(2);
    }

    set_value(5);

    // v_w = push set_value(2); // NOTE: this fails to compile as set_value is not a slicing fn

    v_l = push returning_to_wall;

    (v) {
        clear;
        if is_flag {
            recall([v]);
        }

        // different scope, can use same slice names
        v_l = push returning_to_wall;

        // very bizzare lambda tests
        {
            clear;

            () {
                clear;
            };

            {
                fill;
            }();

            (lv){
                set_value([v]);
                set_value([lv]);

                set_value([v][lv]); // concatinating two template args
            }(5);
        };

        pop v_l;
    } (1);

    for 65535 {
        clear; step_for(15);
    }

    if is_wall {
        recall;
    } else {
        step;
    }

    --;

    // slice tracker stress test

    pop v_l;
    v_l = push move_value;

    left;

    v_l2 = push returning_to_wall;
    pop v_l2;
    pop v_l;

    // pop v_w;

    place;
}